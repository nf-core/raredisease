/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/raredisease Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Required options
    input                      = null

    // References
    genome                     = 'GRCh38'
    igenomes_base              = 's3://ngi-igenomes/igenomes/'
    igenomes_ignore            = false
    local_genomes              = null
    save_reference             = false
    mito_name                  = 'chrM'

    // Main options
    analysis_type              = 'wgs'
    bait_padding               = 100
    run_rtgvcfeval             = false
    save_mapped_as_cram        = false
    skip_eklipse               = false
    skip_fastp                 = false
    skip_fastqc                = false
    skip_gens                  = true
    skip_germlinecnvcaller     = false
    skip_haplocheck            = false
    skip_peddy                 = false
    skip_me_annotation         = false
    skip_mt_annotation         = false
    skip_qualimap              = false
    skip_snv_annotation        = false
    skip_sv_annotation         = false
    skip_me_annotation         = false
    skip_mt_annotation         = false
    skip_mt_subsample          = false
    skip_vcf2cytosure          = true
    skip_vep_filter            = false
    cadd_resources             = null
    platform                   = 'illumina'

    // Bam_qc
    ngsbits_samplegender_method = 'xy'

    // File params
    fai                             = null
    bwa                             = null
    bwamem2                         = null
    call_interval                   = null
    cadd_resources                  = null
    gcnvcaller_model                = null
    gens_interval_list              = null
    gens_pon_female                 = null
    gens_pon_male                   = null
    gens_gnomad_pos                 = null
    gnomad_af                       = null
    gnomad_af_idx                   = null
    intervals_wgs                   = null
    intervals_y                     = null
    known_dbsnp                     = null
    known_dbsnp_tbi                 = null
    mobile_element_references       = null
    mobile_element_svdb_annotations = null
    ml_model                        = null
    mt_fasta                        = null
    ploidy_model                    = null
    reduced_penetrance              = null
    readcount_intervals             = null
    rtg_truthvcfs                   = null
    sample_id_map                   = null
    sequence_dictionary             = null
    score_config_mt                 = null
    score_config_snv                = null
    score_config_sv                 = null
    sdf                             = null
    svdb_query_bedpedbs             = null
    svdb_query_dbs                  = null
    target_bed                      = null
    variant_catalog                 = null
    variant_consequences_snv        = null
    variant_consequences_sv         = null
    vep_filters                     = null
    vep_filters_scout_fmt           = null
    vcf2cytosure_blacklist          = null
    vcfanno_resources               = null
    vcfanno_toml                    = null
    vcfanno_lua                     = null
    vep_cache                       = null
    vep_plugin_files                = null

    // Alignment
    aligner                    = 'bwamem2'
    min_trimmed_length         = 40
    mt_subsample_rd            = 150
    mt_subsample_seed          = 30
    rmdup                      = false

    // Variant calling
    cnvnator_binsize           = 1000
    variant_caller             = 'deepvariant'

    // variant annotation
    vep_cache_version          = 110

    // sentieon Defaults
    ml_model                   = ''

    // Dnascope SNV calling
    sentieon_dnascope_pcr_indel_model = 'CONSERVATIVE'
    variant_type                      = 'snp,indel'

    // MultiQC options
    multiqc_config              = null
    multiqc_title               = null
    multiqc_logo                = null
    max_multiqc_email_size      = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = 'results'
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false

    // Config options
    config_profile_name        = null
    config_profile_description = null
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationSchemaIgnoreParams     = 'fasta,genomes,igenomes_base'
    validationShowHiddenParams       = false
    validate_params                  = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/raredisease custom profiles from different institutions.
try {
    includeConfig "${params.custom_config_base}/pipeline/raredisease.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config/raredisease profiles: ${params.custom_config_base}/pipeline/raredisease.config")
}
profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        channels               = ['conda-forge', 'bioconda', 'defaults']
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        docker.runOptions      = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions      = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 4
        executor.memory        = 8.GB
    }
    test            { includeConfig 'conf/test.config'            }
    test_full       { includeConfig 'conf/test_full.config'       }
    test_one_sample { includeConfig 'conf/test_one_sample.config' }
    test_sentieon   { includeConfig 'conf/test_sentieon.config'   }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-validation@1.1.3' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}


// Load wes.config if --analysis_type='wes'
if (params.analysis_type == 'wes') {
    includeConfig 'conf/wes.config'
}


// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/raredisease'
    author          = """Clinical Genomics Stockholm"""
    homePage        = 'https://github.com/nf-core/raredisease'
    description     = """call and score variants from WGS/WES of rare disease patients"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '2.0.0'
    doi             = ''
}

// Load DSL2 module options from config files, where each file contains the options for modules used in the eponymous subworkflow.

includeConfig 'conf/modules/raredisease.config'
includeConfig 'conf/modules/align.config'
includeConfig 'conf/modules/annotate_consequence_pli.config'
includeConfig 'conf/modules/annotate_genome_snvs.config'
includeConfig 'conf/modules/annotate_mt_snvs.config'
includeConfig 'conf/modules/annotate_structural_variants.config'
includeConfig 'conf/modules/call_repeat_expansions.config'
includeConfig 'conf/modules/call_snv.config'
includeConfig 'conf/modules/call_structural_variants.config'
includeConfig 'conf/modules/convert_mt_bam_to_fastq.config'
includeConfig 'conf/modules/generate_cytosure_files.config'
includeConfig 'conf/modules/gens.config'
includeConfig 'conf/modules/prepare_references.config'
includeConfig 'conf/modules/qc_bam.config'
includeConfig 'conf/modules/rank_variants.config'
includeConfig 'conf/modules/scatter_genome.config'
includeConfig 'conf/modules/align_MT.config'
includeConfig 'conf/modules/align_bwa_bwamem2.config'
includeConfig 'conf/modules/align_sentieon.config'
includeConfig 'conf/modules/annotate_cadd.config'
includeConfig 'conf/modules/call_snv_MT.config'
includeConfig 'conf/modules/call_snv_deepvariant.config'
includeConfig 'conf/modules/call_snv_sentieon.config'
includeConfig 'conf/modules/call_sv_MT.config'
includeConfig 'conf/modules/call_sv_cnvnator.config'
includeConfig 'conf/modules/call_sv_germlinecnvcaller.config'
includeConfig 'conf/modules/call_sv_manta.config'
includeConfig 'conf/modules/call_sv_tiddit.config'
includeConfig 'conf/modules/postprocess_MT_calls.config'
includeConfig 'conf/modules/call_mobile_elements.config'
includeConfig 'conf/modules/annotate_mobile_elements.config'
includeConfig 'conf/modules/generate_clinical_set.config'
includeConfig 'conf/modules/variant_evaluation.config'
includeConfig 'conf/modules/subsample_mt.config'
includeConfig 'conf/modules/annotate_rhocallviz.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
